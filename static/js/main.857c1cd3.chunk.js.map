{"version":3,"sources":["components/api/utils.js","components/Layout/NavBar.jsx","components/LandingPage/Header.jsx","components/LandingPage/BlockChainDescription.jsx","components/LandingPage/CoinInfo.jsx","pages/index.jsx","components/api/Api.js","components/Vote/voteUtils.js","components/Vote/VoteListItem.jsx","components/Vote/VoteList.jsx","components/Vote/VoteDetail.jsx","components/Vote/NewProposal.jsx","components/TextFormats/HeaderTextFormat.jsx","components/TextFormats/IndividualLineFormat.jsx","pages/vote.jsx","pages/profile.jsx","App.js","reportWebVitals.js","index.js"],"names":["getShortAccountHash","account","accountHash","String","slice","length","getAccountHash","accounts","networkId","navigation","name","href","process","classNames","classes","filter","Boolean","join","NabBar","web3Context","useWeb3","PROJECT_ID","providerName","requestAccess","useCallback","requestAuth","location","useLocation","checkAccount","className","onClick","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","navigator","clipboard","writeText","newestOnTop","rtl","pauseOnFocusLoss","as","open","Button","map","item","pathname","src","alt","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","Item","active","Panel","Header","BlockChainDescription","CoinInfo","index","require","address","abi","ipfs","create","host","port","protocol","uploadProposal","text","a","add","err","ipfsHash","console","log","added","path","retrieveProposal","proposalHash","fetch","then","x","json","getContract","web3","eth","Contract","getProposalHashes","contract","methods","call","getProposalInfo","createProposal","values","JSON","stringify","send","from","sendVote","optionIndex","stakeValue","amt","vote","getCurrentDateTime","Date","now","getReadableDate","date","toLocaleString","day","month","year","VoteListItem","content","skeleton","url","useRouteMatch","to","userId","end_date","title","create_date","VoteList","lib","useState","proposalList","setProposalList","proposalToShow","setProposalToShow","useEffect","proposalData","forEach","element","data","new_data","prevState","getAllProposals","sort","b","VoteDetail","params","id","proposalContent","setProposalContent","proposalInfo","setProposalInfo","proposal","getProposal","isOpen","setIsOpen","closeModal","amount","setAmount","selected","setSelected","Number","isSelected","isLoggedIn","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","options","option","type","label","appear","show","autoFocus","onClose","Child","Overlay","Title","placeholder","onChange","e","target","value","min_stake","submitVote","success","toastId","setTimeout","warn","PreviousVotesList","CurrentResultsLoss","CurrentResultsAllocation","IsActiveTag","isActive","VoteItem","choice","InformationItem","ResultItem","percentage","style","width","currentResults","setCurrentResults","temp","votes","push","voter","getCurrentResults","result","totalStaked","stakedValuePerOption","reduce","Math","round","formTypes","minStakeValues","initialType","initialMinStakeVal","initialValues","finalValues","numOfOptions","isLossVoting","isAllocationProposal","proposalSchema","Yup","shape","required","min","NewProposal","validationSchema","validateOnMount","onSubmit","actions","resetForm","errors","touched","isValid","setSubmitting","component","CustomTextInput","CustomLongTextInput","insert","remove","friend","CustomOptionInput","CustomVoteInput","CustomStakeInput","CustomDateInput","disabled","submitProposal","field","props","rows","find","stake","error","getLabel","stakeLabel","setStakeLabel","buttonRef","useRef","React","createRef","initialFocus","current","findIndex","ref","setStake","setType","setFieldValue","useFormikContext","dateStyle","val","getTime","inline","HeaderTextFormat","header","IndividualLineFormat","Vote","page","setPage","PanelItem","PanelLeft","AboutTab","PanelRight","exact","sample_data","Profile","ProfileTab","SettingsTab","HistoryTab","App","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.857c1cd3.chunk.js","sourcesContent":["export function getShortAccountHash(account) {\r\n  const accountHash = String(account);\r\n  if (accountHash) {\r\n    return (\r\n      accountHash.slice(0, 6) +\r\n      \"...\" +\r\n      accountHash.slice(-4, accountHash.length)\r\n    );\r\n  } else {\r\n    return \"Login\";\r\n  }\r\n}\r\n\r\nexport function getAccountHash(accounts, networkId) {\r\n  if (accounts && accounts.length && networkId === 3) {\r\n    return accounts[0];\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import { Fragment, useCallback } from \"react\";\r\nimport { Disclosure, Menu, Transition } from \"@headlessui/react\";\r\nimport { BellIcon, MenuIcon, XIcon } from \"@heroicons/react/outline\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useWeb3 } from \"@openzeppelin/network/lib/react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { getShortAccountHash, getAccountHash } from \"../api/utils\";\r\n\r\nconst navigation = [\r\n  { name: \"Dashboard\", href: `${process.env.PUBLIC_URL}#/` },\r\n  { name: \"Vote\", href: `${process.env.PUBLIC_URL}#/vote` },\r\n];\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nexport default function NabBar() {\r\n  //Web 3 Init and info\r\n  const web3Context = useWeb3(\r\n    `wss://mainnet.infura.io/ws/v3/${process.env.PROJECT_ID}`\r\n  );\r\n  const { networkId, accounts, providerName } = web3Context;\r\n\r\n  const requestAccess = useCallback(\r\n    () => web3Context.requestAuth(),\r\n    [web3Context]\r\n  );\r\n  const location = useLocation();\r\n  const accountHash = getAccountHash(accounts, networkId);\r\n\r\n  //Toast info\r\n  const copyNotification = () =>\r\n    toast.info(\"Copied to clipboard\", {\r\n      position: \"bottom-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  function checkAccount() {\r\n    if (accounts && accounts.length) {\r\n      return (\r\n        <div\r\n          className=\"block px-4 py-2 w-full text-left cursor-pointer\"\r\n          onClick={() => {\r\n            copyNotification();\r\n            navigator.clipboard.writeText(accountHash);\r\n          }}\r\n        >\r\n          <span> Logged in as </span>\r\n          <span className=\"font-semibold text-gray-500\">\r\n            {getShortAccountHash(accounts)}\r\n          </span>\r\n          <ToastContainer\r\n            position=\"bottom-center\"\r\n            autoClose={3000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss={false}\r\n            draggable\r\n            pauseOnHover={false}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (!!networkId && providerName !== \"infura\") {\r\n      return (\r\n        <button\r\n          className=\"block px-4 py-2 w-full text-left\"\r\n          onClick={requestAccess}\r\n        >\r\n          Login\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Disclosure as=\"nav\" className=\"bg-gray-100\">\r\n      {({ open }) => (\r\n        <>\r\n          <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n            <div className=\"relative flex items-center justify-between h-16\">\r\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n                {/* Mobile menu button*/}\r\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\r\n                  <span className=\"sr-only\">Open main menu</span>\r\n                  {open ? (\r\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                  ) : (\r\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                  )}\r\n                </Disclosure.Button>\r\n              </div>\r\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n                <div className=\"flex-shrink-0 flex items-center\">\r\n                  IMAGE HERE\r\n                </div>\r\n                <div className=\"hidden sm:block sm:ml-6\">\r\n                  <div className=\"flex space-x-4\">\r\n                    {navigation.map((item) => (\r\n                      <a\r\n                        key={item.name}\r\n                        href={item.href}\r\n                        className={classNames(\r\n                          location.pathname === item.href\r\n                            ? \"bg-gray-900 text-white\"\r\n                            : \"text-gray-600 hover:bg-gray-500 hover:text-white\",\r\n                          \"px-3 py-2 rounded-md text-sm font-medium\"\r\n                        )}\r\n                        aria-current={\r\n                          location.pathname === item.href ? \"page\" : undefined\r\n                        }\r\n                      >\r\n                        {item.name}\r\n                      </a>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\r\n                {/* Account Hash */}\r\n                <div className=\"text-gray-400 font-semibold text-sm\">\r\n                  {checkAccount() ? checkAccount() : null}\r\n                </div>\r\n\r\n                {/* Bell notifications */}\r\n                <button className=\"bg-gray-300 p-1 rounded-full text-gray-500 hover:text-black focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\r\n                  <span className=\"sr-only\">View notifications</span>\r\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                </button>\r\n\r\n                {/* Profile dropdown */}\r\n                <Menu as=\"div\" className=\"ml-3 relative\">\r\n                  <div>\r\n                    <Menu.Button className=\"bg-gray-100 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\r\n                      <span className=\"sr-only\">Open user menu</span>\r\n                      {/* Placeholder Image */}\r\n                      <img\r\n                        className=\"h-8 w-8 rounded-full\"\r\n                        src=\"https://images.unsplash.com/photo-1576245482660-6fcf7492b4e5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80\"\r\n                        alt=\"\"\r\n                      />\r\n                    </Menu.Button>\r\n                  </div>\r\n                  <Transition\r\n                    as={Fragment}\r\n                    enter=\"transition ease-out duration-100\"\r\n                    enterFrom=\"transform opacity-0 scale-95\"\r\n                    enterTo=\"transform opacity-100 scale-100\"\r\n                    leave=\"transition ease-in duration-75\"\r\n                    leaveFrom=\"transform opacity-100 scale-100\"\r\n                    leaveTo=\"transform opacity-0 scale-95\"\r\n                  >\r\n                    <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <a\r\n                            href={`${process.env.PUBLIC_URL}#/profile`}\r\n                            className={classNames(\r\n                              active ? \"bg-gray-100\" : \"\",\r\n                              \"block px-4 py-2 text-sm text-gray-700\"\r\n                            )}\r\n                          >\r\n                            Profile\r\n                          </a>\r\n                        )}\r\n                      </Menu.Item>\r\n                      {/* <Menu.Item>\r\n                        {({ active }) => (\r\n                          <a\r\n                            href=\"/setting\"\r\n                            className={classNames(\r\n                              active ? \"bg-gray-100\" : \"\",\r\n                              \"block px-4 py-2 text-sm text-gray-700\"\r\n                            )}\r\n                          >\r\n                            Settings\r\n                          </a>\r\n                        )}\r\n                      </Menu.Item> */}\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <div\r\n                            className={classNames(\r\n                              active ? \"bg-gray-100\" : \"\",\r\n                              \"text-sm text-gray-700\"\r\n                            )}\r\n                          >\r\n                            {checkAccount()}\r\n                          </div>\r\n                        )}\r\n                      </Menu.Item>\r\n                    </Menu.Items>\r\n                  </Transition>\r\n                </Menu>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Disclosure.Panel className=\"sm:hidden\">\r\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n              {navigation.map((item) => (\r\n                <a\r\n                  key={item.name}\r\n                  href={item.href}\r\n                  className={classNames(\r\n                    location.pathname === item.href\r\n                      ? \"bg-gray-900 text-white\"\r\n                      : \"text-gray-600 hover:bg-gray-500 hover:text-white\",\r\n                    \"block px-3 py-2 rounded-md text-base font-medium\"\r\n                  )}\r\n                  aria-current={\r\n                    location.pathname === item.href ? \"page\" : undefined\r\n                  }\r\n                >\r\n                  {item.name}\r\n                </a>\r\n              ))}\r\n            </div>\r\n          </Disclosure.Panel>\r\n        </>\r\n      )}\r\n    </Disclosure>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"w-screen text-center p-8\">\r\n      <div href=\"https://fintechsociety.comp.nus.edu.sg/\" className=\"text-6xl pt-8\">\r\n        Fintech Society\r\n      </div>\r\n      <a href=\"https://fintechsociety.comp.nus.edu.sg/\">\r\n        <button className=\"text-base bg-black rounded-md font-semibold text-white pt-2.5 pb-2.5 pl-5 pr-5 mt-4\">\r\n          Click here\r\n        </button>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function BlockChainDescription() {\r\n  return (\r\n    <div className=\"p-8\">\r\n      <header className=\"text-center text-xl p-4 font-semibold\">What is Blockchain?</header>\r\n      <div className=\"text-center m-auto max-w-prose\">\r\n        Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n        since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book. It has survived not only five\r\n        centuries, but also the leap into electronic typesetting, remaining\r\n        essentially unchanged. It was popularised in the 1960s with the release\r\n        of Letraset sheets containing Lorem Ipsum passages, and more recently\r\n        with desktop publishing software like Aldus PageMaker including versions\r\n        of Lorem Ipsum\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function CoinInfo() {\r\n  return (\r\n    <div className=\"p-8\">\r\n      <header className=\"text-center text-xl p-4 font-semibold\">Info about our coin</header>\r\n      <div className=\"text-center m-auto max-w-prose\">\r\n        Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n        since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book. It has survived not only five\r\n        centuries, but also the leap into electronic typesetting, remaining\r\n        essentially unchanged. It was popularised in the 1960s with the release\r\n        of Letraset sheets containing Lorem Ipsum passages, and more recently\r\n        with desktop publishing software like Aldus PageMaker including versions\r\n        of Lorem Ipsum\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport NavBar from \"../components/Layout/NavBar\";\r\nimport Header from \"../components/LandingPage/Header\"\r\nimport BlockChainDescription from \"../components/LandingPage/BlockChainDescription\";\r\nimport CoinInfo from \"../components/LandingPage/CoinInfo\";\r\n\r\nexport default function index() {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Header />\r\n      <BlockChainDescription />\r\n      <CoinInfo />\r\n    </div>\r\n  );\r\n}\r\n","const { address, abi } = require(\"./contract.json\");\r\nconst ipfsClient = require(\"ipfs-http-client\");\r\n\r\nconst ipfs = ipfsClient.create({\r\n  host: \"ipfs.infura.io\",\r\n  port: 5001,\r\n  protocol: \"https\",\r\n});\r\n\r\nexport async function uploadProposal(text) {\r\n  const added = await ipfs.add(text, (err, ipfsHash) => {\r\n    console.log(err, ipfsHash);\r\n  });\r\n  return added.path;\r\n}\r\n\r\nexport async function retrieveProposal(proposalHash) {\r\n  return fetch(\"https://ipfs.infura.io/ipfs/\" + proposalHash).then((x) =>\r\n    x.json()\r\n  );\r\n}\r\n\r\nexport function getContract(web3) {\r\n  return new web3.eth.Contract(abi, address);\r\n}\r\n\r\nexport async function getProposalHashes(web3) {\r\n  const contract = await getContract(web3);\r\n  return contract.methods.getProposalHashes().call();\r\n}\r\n\r\nexport async function getProposalInfo(web3, ipfsHash) {\r\n  const contract = await getContract(web3);\r\n  return contract.methods.getProposalInfo(ipfsHash).call();\r\n}\r\nexport async function getAllProposals(web3) {\r\n  const contract = await getContract(web3);\r\n  return contract.methods.getAllProposals().call();\r\n}\r\n\r\nexport async function getVotesForOption(web3, ipfsHash, optionIndex) {\r\n  const contract = await getContract(web3);\r\n  return contract.methods.getVotesForOption(ipfsHash, optionIndex).call();\r\n}\r\n\r\nexport async function initialiseUser(web3, account, userAccount) {\r\n  const contract = await getContract(web3);\r\n  try {\r\n    return await contract.methods\r\n      .initialiseUser(userAccount)\r\n      .send({ from: account });\r\n  } catch (err) {\r\n    console.log(`Unsuccessful init of ${userAccount}`);\r\n  }\r\n}\r\n\r\n//can change anything except .create proposal\r\nexport async function createProposal(web3, account, values) {\r\n  const contract = await getContract(web3);\r\n  const ipfsHash = await uploadProposal(JSON.stringify(values));\r\n  try {\r\n    return await contract.methods\r\n      .createProposal(\r\n        ipfsHash,\r\n        values[\"numOfOptions\"],\r\n        values[\"min_stake\"],\r\n        values[\"isLossVoting\"],\r\n        values[\"isAllocationProposal\"]\r\n      )\r\n      .send({ from: account });\r\n  } catch (err) {\r\n    console.log(err);\r\n    console.log(\"Unsuccessful setting of Proposal Status\");\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function setProposalStatus(web3, account, ipfsHash, isActive) {\r\n  const contract = await getContract(web3);\r\n  try {\r\n    return await contract.methods\r\n      .setProposalStatus(ipfsHash, isActive)\r\n      .send({ from: account });\r\n  } catch (err) {\r\n    console.log(\"Unsuccessful setting of Proposal Status\");\r\n  }\r\n}\r\n\r\nexport async function sendVote(\r\n  web3,\r\n  account,\r\n  ipfsHash,\r\n  optionIndex,\r\n  stakeValue\r\n) {\r\n  const contract = await getContract(web3);\r\n  const amt = stakeValue * 1000000000000000000;\r\n  try {\r\n    return await contract.methods\r\n      .vote(ipfsHash, optionIndex, String(amt))\r\n      .send({ from: account });\r\n  } catch (err) {\r\n    console.log(\"Unsuccessful voting on proposal\");\r\n  }\r\n}\r\n","export const getUser = (userId) => {\r\n  return \"John Doe\";\r\n};\r\n\r\nexport const getCurrentDateTime = () => {\r\n  return Date.now();\r\n};\r\n\r\nexport const showCurrentDateTime = (date) => {\r\n  return new Date(date).toLocaleString();\r\n};\r\n\r\nexport const showCurrentDate = (date) => {\r\n  return new Date(date).toLocaleString(\"en-US\", { dateStyle: \"short\" });\r\n};\r\n\r\nexport const getReadableDate = (date) => {\r\n  return new Date(date).toLocaleString(\"en-US\", {\r\n    day: \"numeric\",\r\n    month: \"short\",\r\n    year: \"numeric\",\r\n  });\r\n};\r\n\r\nexport const timeSince = (date) => {\r\n  const currDate = getCurrentDateTime();\r\n  const seconds = Math.floor((currDate - date) / 1000);\r\n\r\n  let interval = seconds / 63072000;\r\n\r\n  if (interval > 1) {\r\n    return Math.floor(interval + 1) + \" years\";\r\n  }\r\n  interval = seconds / 31536000;\r\n  if (interval > 1) {\r\n    return Math.floor(interval) + \" year\";\r\n  }\r\n  interval = seconds / 5184000;\r\n  if (interval > 1) {\r\n    return Math.floor(interval + 1) + \" months\";\r\n  }\r\n  interval = seconds / 2592000;\r\n  if (interval > 1) {\r\n    return Math.floor(interval) + \" month\";\r\n  }\r\n  interval = seconds / 172800;\r\n  if (interval > 1) {\r\n    return Math.floor(interval + 1) + \" days\";\r\n  }\r\n  interval = seconds / 86400;\r\n  if (interval > 1) {\r\n    return Math.floor(interval) + \" day\";\r\n  }\r\n  interval = seconds / 7200;\r\n  if (interval > 1) {\r\n    return Math.floor(interval + 1) + \" hours\";\r\n  }\r\n  interval = seconds / 3600;\r\n  if (interval > 1) {\r\n    return Math.floor(interval) + \" hour\";\r\n  }\r\n  interval = seconds / 120;\r\n  if (interval > 1) {\r\n    return Math.floor(interval + 1) + \" minutes\";\r\n  }\r\n  interval = seconds / 60;\r\n  if (interval > 1) {\r\n    return Math.floor(interval) + \" minute\";\r\n  }\r\n\r\n  if (seconds > 1 || seconds === 0) {\r\n    return Math.floor(seconds) + \" seconds\";\r\n  }\r\n  return Math.floor(seconds) + \" second\";\r\n};\r\n","import React from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { getShortAccountHash } from \"../api/utils\";\r\nimport { getCurrentDateTime, getReadableDate } from \"./voteUtils\";\r\n\r\nexport default function VoteListItem({ content, skeleton }) {\r\n  let { url } = useRouteMatch();\r\n\r\n  if (skeleton) {\r\n    return (\r\n      <div className=\"flex flex-col space-y-4\">\r\n        <div className=\"border border-gray-100 rounded-md w-full hover:bg-indigo-50 shadow-md\">\r\n          <div className=\"animate-pulse bg-gray-100 py-4 px-4 flex flex-col text-gray-400 hover:text-gray-800 cursor-pointer h-56\"></div>\r\n        </div>\r\n        <div className=\"border border-gray-100 rounded-md w-full hover:bg-indigo-50 shadow-md\">\r\n          <div className=\"animate-pulse bg-gray-100 py-4 px-4 flex flex-col text-gray-400 hover:text-gray-800 cursor-pointer h-56\"></div>\r\n        </div>\r\n        <div className=\"border border-gray-100 rounded-md w-full hover:bg-indigo-50 shadow-md\">\r\n          <div className=\"animate-pulse bg-gray-100 py-4 px-4 flex flex-col text-gray-400 hover:text-gray-800 cursor-pointer h-56\"></div>\r\n        </div>\r\n        <div className=\"border border-gray-100 rounded-md w-full hover:bg-indigo-50 shadow-md\">\r\n          <div className=\"animate-pulse bg-gray-100 py-4 px-4 flex flex-col text-gray-400 hover:text-gray-800 cursor-pointer h-56\"></div>\r\n        </div>\r\n        <div className=\"border border-gray-100 rounded-md w-full hover:bg-indigo-50 shadow-md\">\r\n          <div className=\"animate-pulse bg-gray-100 py-4 px-4 flex flex-col text-gray-400 hover:text-gray-800 cursor-pointer h-56\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col border border-gray-200 shadow-sm rounded-md w-full hover:bg-indigo-100\">\r\n      <Link to={`${url}/${content.ipfs}`}>\r\n        <div className=\"flex flex-col py-4 px-4 text-gray-400 hover:text-gray-800 cursor-pointer\">\r\n          <div className=\"flex flex-row justify-between mb-1\">\r\n            <div className=\"text-base font-light\">\r\n              Post by {getShortAccountHash(content.userId)}\r\n            </div>\r\n            {getCurrentDateTime() < content.end_date ? (\r\n              <div className=\"flex bg-green-500 text-white px-4 p-1 rounded-full text-sm font-medium text-center\">\r\n                Active\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex bg-red-500 text-white px-4 p-1 rounded-full text-sm font-medium text-center\">\r\n                Closed\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"text-gray-800 text-3xl mb-1 font-semibold line-clamp-1\">\r\n            {content.title}\r\n          </div>\r\n          <div className=\"text-lg font-normal mb-1 overflow-ellipsis overflow-hidden line-clamp-4\">\r\n            {content.content}\r\n          </div>\r\n          <div className=\"text-base font-light\">\r\n            {getReadableDate(content.create_date)}\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { useWeb3 } from \"@openzeppelin/network/lib/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getProposalHashes, retrieveProposal } from \"../api/Api\";\r\nimport VoteListItem from \"./VoteListItem\";\r\n\r\nexport default function VoteList() {\r\n  const web3Context = useWeb3(\r\n    `wss://mainnet.infura.io/ws/v3/${process.env.PROJECT_ID}`\r\n  );\r\n  const { lib: web3 } = web3Context;\r\n\r\n  const [proposalList, setProposalList] = useState([]);\r\n  const [proposalToShow, setProposalToShow] = useState(0);\r\n\r\n  useEffect(() => {\r\n    async function getAllProposals() {\r\n      await getProposalHashes(web3).then((proposalData) => {\r\n        setProposalToShow(proposalData.length);\r\n        proposalData.forEach(async (element) => {\r\n          if (element) {\r\n            await retrieveProposal(element).then((data) => {\r\n              const new_data = { ...data, ipfs: element };\r\n              setProposalList((prevState) => [...prevState, new_data]);\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n    getAllProposals();\r\n  }, [web3]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col space-y-4\">\r\n      {proposalList.length === proposalToShow ? (\r\n        proposalList\r\n          .sort((a, b) => b.create_date - a.create_date)\r\n          .map((vote) => <VoteListItem content={vote} key={vote.ipfs} />)\r\n      ) : (\r\n        <VoteListItem skeleton={true} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Dialog, Transition } from \"@headlessui/react\";\r\nimport { useWeb3 } from \"@openzeppelin/network/lib/react\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getProposalInfo, retrieveProposal, sendVote } from \"../api/Api\";\r\nimport { getShortAccountHash } from \"../api/utils\";\r\nimport { getReadableDate } from \"./voteUtils\";\r\n\r\nexport default function VoteDetail() {\r\n  //Address routing\r\n  let { params } = useRouteMatch();\r\n  const ipfsHash = params.id;\r\n\r\n  //Web3 API Itialization\r\n  const web3Context = useWeb3(\r\n    `wss://mainnet.infura.io/ws/v3/${process.env.PROJECT_ID}`\r\n  );\r\n  const { lib: web3, accounts } = web3Context;\r\n\r\n  //Getting proposal content\r\n  const [proposalContent, setProposalContent] = useState(null);\r\n  const [proposalInfo, setProposalInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getProposal() {\r\n      await retrieveProposal(ipfsHash).then((proposal) => {\r\n        setProposalContent(proposal);\r\n      });\r\n      await getProposalInfo(web3, ipfsHash).then((info) => {\r\n        setProposalInfo(info);\r\n      });\r\n    }\r\n    getProposal();\r\n  }, [ipfsHash, web3]);\r\n\r\n  //Model Handling\r\n  let [isOpen, setIsOpen] = useState(false);\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  //Vote submission\r\n  const [amount, setAmount] = useState(null);\r\n\r\n  //Amount Toasts\r\n  const amountError = () =>\r\n    toast.warn(\"Amount must be greater than min stake value\", {\r\n      position: \"bottom-center\",\r\n      autoClose: 4000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      toastId: \"amountError\",\r\n    });\r\n\r\n  const confirmationMessage = () =>\r\n    toast.success(\"🦊 Confirm on MetaMask!\", {\r\n      position: \"bottom-center\",\r\n      autoClose: 4000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      toastId: \"confirmationMessage\",\r\n    });\r\n\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  async function submitVote() {\r\n    const vote = await sendVote(\r\n      web3,\r\n      accounts[0],\r\n      ipfsHash,\r\n      selected,\r\n      Number(amount)\r\n    );\r\n    return vote;\r\n  }\r\n\r\n  function isSelected() {\r\n    if (selected !== undefined && selected !== null) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function isLoggedIn() {\r\n    if (accounts.length > 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function getType() {\r\n    if (proposalContent.type === \"loss\") {\r\n      return \"Loss Voting\";\r\n    }\r\n    if (proposalContent.type === \"allocation\") {\r\n      return \"Allocation Proposal\";\r\n    }\r\n    return \"unknown\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {proposalContent ? (\r\n        <div className=\"flex flex-col space-y-6 max-w-7xl p-2 px-4 xl:flex-row xl:justify-between xl:space-x-6 mb-10 cursor-default\">\r\n          <div className=\"flex flex-col space-y-8 w-full\">\r\n            <div className=\"space-y-4\">\r\n              <Link\r\n                to=\"/vote\"\r\n                className=\"flex flex-row text-gray-400 items-center content-center cursor-pointer w-min\"\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-6 w-6\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M7 16l-4-4m0 0l4-4m-4 4h18\"\r\n                  />\r\n                </svg>\r\n                <div className=\"\">back</div>\r\n              </Link>\r\n              <div className=\"text-gray-700 font-bold text-3xl\">\r\n                {proposalContent.title}\r\n              </div>\r\n              <div className=\"div\">\r\n                <IsActiveTag content={proposalContent} />\r\n              </div>\r\n              <div className=\"text-gray-600 font-medium text-xl\">\r\n                {proposalContent.content}\r\n              </div>\r\n            </div>\r\n            <div className=\"flex-col bg-white rounded-xl border border-gray-200\">\r\n              <div className=\"border-b border-gray-200 bg-blue-100 px-8 py-3 rounded-t-lg font-bold text-xl\">\r\n                Cast your vote\r\n              </div>\r\n              <div className=\"p-4\">\r\n                {proposalContent.options.map((option, index) => (\r\n                  <button\r\n                    key={option.id}\r\n                    type=\"submit\"\r\n                    className={`w-full rounded-full items-center px-5 py-3 text-md font-bold text-indigo-600 bg-white outline-none m-1 hover:m-0  border border-indigo-600 hover:border-indigo-800 hover:text-black hover:bg-blue-100 transition-all \r\n                    ${\r\n                      index === selected\r\n                        ? \"ring-2 border-transparent ring-blue-500 outline-none border m-0 bg-indigo-50\"\r\n                        : null\r\n                    }`}\r\n                    onClick={() => setSelected(index)}\r\n                  >\r\n                    {option.label}\r\n                  </button>\r\n                ))}\r\n                <button\r\n                  className={`w-full rounded-full items-center px-5 py-3 text-md font-bold text-white outline-none bg-yellow-500 m-1 border border-red-600 transition-all ${\r\n                    isSelected() && isLoggedIn()\r\n                      ? \"focus:outline-none hover:m-0 focus:m-0 hover:border-4 focus:border-4 hover:border-red-800 hover:text-black hover:bg-yellow-400 focus:border-purple-200 cursor-pointer\"\r\n                      : \"cursor-not-allowed\"\r\n                  }`}\r\n                  onClick={isSelected() && isLoggedIn() ? openModal : null}\r\n                >\r\n                  Vote\r\n                </button>\r\n                <Transition\r\n                  appear\r\n                  show={isOpen}\r\n                  as={Fragment}\r\n                  autoFocus={isOpen}\r\n                >\r\n                  <Dialog\r\n                    as=\"div\"\r\n                    className=\"fixed inset-0 z-10 overflow-y-auto\"\r\n                    onClose={closeModal}\r\n                  >\r\n                    <div className=\"min-h-screen px-4 text-center\">\r\n                      {/* Allow for clicking outside to close modal*/}\r\n                      <Transition.Child\r\n                        as={Fragment}\r\n                        enter=\"ease-out duration-300\"\r\n                        enterFrom=\"opacity-0\"\r\n                        enterTo=\"opacity-100\"\r\n                        leave=\"ease-in duration-200\"\r\n                        leaveFrom=\"opacity-100\"\r\n                        leaveTo=\"opacity-0\"\r\n                      >\r\n                        <Dialog.Overlay className=\"fixed inset-0\" />\r\n                      </Transition.Child>\r\n\r\n                      {/* This element is to trick the browser into centering the modal contents. */}\r\n                      <span\r\n                        className=\"inline-block h-screen align-middle\"\r\n                        aria-hidden=\"true\"\r\n                      >\r\n                        &#8203;\r\n                      </span>\r\n                      <Transition.Child\r\n                        as={Fragment}\r\n                        enter=\"ease-out duration-300\"\r\n                        enterFrom=\"opacity-0 scale-95\"\r\n                        enterTo=\"opacity-100 scale-100\"\r\n                        leave=\"ease-in duration-200\"\r\n                        leaveFrom=\"opacity-100 scale-100\"\r\n                        leaveTo=\"opacity-0 scale-95\"\r\n                      >\r\n                        <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\r\n                          <Dialog.Title\r\n                            as=\"h3\"\r\n                            className=\"text-lg font-medium leading-6 text-gray-900 cursor-default\"\r\n                          >\r\n                            Enter Stake Amount\r\n                          </Dialog.Title>\r\n                          <div className=\"py-1 font-thin text-sm\">\r\n                            {isSelected()\r\n                              ? `You are voting for: ${proposalContent.options[selected].label}`\r\n                              : \"Please choose an option!\"}\r\n                          </div>\r\n                          <div className=\"flex flex-row py-2 items-center space-x-2 \">\r\n                            <input\r\n                              type=\"number\"\r\n                              className=\"border border-gray-200 rounded-lg p-2 h-10 w-full shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent font-medium\"\r\n                              placeholder=\"amount\"\r\n                              onChange={(e) => setAmount(e.target.value)}\r\n                            />\r\n                            <button\r\n                              onClick={() => {\r\n                                if (amount >= proposalContent.min_stake) {\r\n                                  submitVote();\r\n                                  confirmationMessage();\r\n                                  setTimeout(() => {\r\n                                    closeModal();\r\n                                  }, 3000);\r\n                                } else {\r\n                                  amountError();\r\n                                }\r\n                              }}\r\n                              className=\"rounded-lg items-center h-10 px-3 py-2 text-sm font-bold text-red-600 bg-white border border-red-600 hover:border-red-800 hover:text-red-800 hover:bg-red-100 focus:border-red-200 focus:ring-2 focus:border-transparent transition-all\"\r\n                            >\r\n                              Vote!\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Transition.Child>\r\n                    </div>\r\n                  </Dialog>\r\n                </Transition>\r\n              </div>\r\n            </div>\r\n            <PreviousVotesList\r\n              proposalContent={proposalContent}\r\n              proposalInfo={proposalInfo}\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-col xl:w-96 space-y-6\">\r\n            <div className=\"flex flex-col bg-white rounded-xl border border-gray-200 w-full\">\r\n              <div className=\"border-b border-gray-200 bg-blue-100 px-8 py-3 rounded-t-lg font-bold text-xl\">\r\n                Information\r\n              </div>\r\n              <div className=\"p-4 flex flex-col space-y-2\">\r\n                <InformationItem\r\n                  title=\"Author\"\r\n                  value={getShortAccountHash(proposalContent.userId)}\r\n                />\r\n                <InformationItem\r\n                  title=\"IPFS\"\r\n                  value={getShortAccountHash(ipfsHash)}\r\n                />\r\n                <InformationItem\r\n                  title=\"Min Stake Value\"\r\n                  value={proposalContent.min_stake}\r\n                />\r\n                <InformationItem title=\"Voting system\" value={getType()} />\r\n                <InformationItem\r\n                  title=\"Created date\"\r\n                  value={getReadableDate(proposalContent.create_date)}\r\n                />\r\n                <InformationItem\r\n                  title=\"Closing date\"\r\n                  value={getReadableDate(proposalContent.end_date)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-col bg-white rounded-xl border border-gray-200 w-full\">\r\n              <div className=\"border-b border-gray-200 bg-blue-100 px-8 py-3 rounded-t-lg font-bold text-xl\">\r\n                Current Results\r\n              </div>\r\n              {proposalContent.type === \"loss\" ? (\r\n                <CurrentResultsLoss\r\n                  proposalContent={proposalContent}\r\n                  proposalInfo={proposalInfo}\r\n                />\r\n              ) : (\r\n                <CurrentResultsAllocation\r\n                  proposalContent={proposalContent}\r\n                  proposalInfo={proposalInfo}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nconst IsActiveTag = ({ content }) => {\r\n  return content.isActive ? (\r\n    <div className=\"flex bg-green-500 text-white px-4 p-1 rounded-full text-sm font-medium w-min text-center\">\r\n      Active\r\n    </div>\r\n  ) : (\r\n    <div className=\"flex bg-purple-500 text-white px-4 p-1 rounded-full text-sm font-medium w-min text-center\">\r\n      Closed\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VoteItem = ({ address, choice, amount }) => {\r\n  return (\r\n    <div className=\"grid grid-cols-3 text-base w-full text-center font-semibold text-gray-800 border-b-2 border-indigo-100 py-4 px-6\">\r\n      <div className=\"mr-auto\">{address}</div>\r\n      <div className=\"\">{choice}</div>\r\n      <div className=\"ml-auto\">{amount}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InformationItem = ({ title, value }) => {\r\n  return (\r\n    <div className=\"flex flex-row justify-between items-center text-base font-semibold text-gray-400\">\r\n      <div className=\"class\">{title}</div>\r\n      <div className=\"text-gray-700\">{value}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ResultItem = ({ choice, percentage, label }) => {\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"flex flex-row justify-between items-center text-base font-semibold text-gray-400\">\r\n        <div className=\"class\">{choice}</div>\r\n        <div className=\"text-gray-700\">{label} ABCDao</div>\r\n      </div>\r\n      <div className=\"shadow-lg\">\r\n        <div className=\"w-full h-1 rounded-full bg-gray-200\"></div>\r\n        <div\r\n          className=\"w-full h-1 rounded-full bg-indigo-600\"\r\n          style={{ width: `${percentage}%` }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction PreviousVotesList({ proposalContent, proposalInfo }) {\r\n  const [currentResults, setCurrentResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    function getCurrentResults() {\r\n      const temp = [];\r\n      proposalInfo.votes.forEach((vote) => {\r\n        temp.push({\r\n          address: getShortAccountHash(vote.voter),\r\n          choice: proposalContent.options[vote.option].label,\r\n          amount: vote.amount / 10 ** 18,\r\n        });\r\n      });\r\n      return temp;\r\n    }\r\n    if (proposalInfo !== null && proposalContent !== null) {\r\n      setCurrentResults(getCurrentResults());\r\n    }\r\n  }, [proposalContent, proposalInfo]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col bg-white rounded-xl border border-gray-200 w-full\">\r\n      <div className=\"border-b border-gray-200 bg-blue-100 px-8 py-3 rounded-t-lg font-bold text-xl\">\r\n        Vote History\r\n      </div>\r\n      <div className=\"flex flex-col\">\r\n        <VoteItem choice=\"Choice\" address=\"Address\" amount=\"Amount\" />\r\n        {currentResults.length !== 0 ? (\r\n          currentResults.map((result, index) => (\r\n            <VoteItem\r\n              key={index}\r\n              choice={result.choice}\r\n              address={result.address}\r\n              amount={result.amount}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div className=\"px-8 py-3 text-center font-semibold\">\r\n            No history...\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"border-t border-gray-200 bg-blue-100 px-8 py-3 rounded-b-lg font-bold text-base text-center cursor-pointer\">\r\n        See More\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CurrentResultsLoss({ proposalContent, proposalInfo }) {\r\n  const [currentResults, setCurrentResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    function getCurrentResults() {\r\n      const temp = [];\r\n      const totalStaked = proposalInfo.stakedValuePerOption.reduce(\r\n        (a, b) => a + b / 10 ** 18,\r\n        0\r\n      );\r\n      proposalContent.options.forEach((option, index) => {\r\n        temp.push({\r\n          choice: option.label,\r\n          percentage:\r\n            Math.round(\r\n              proposalInfo.stakedValuePerOption[index] / 10 ** 14 / totalStaked\r\n            ) / 100,\r\n          label: proposalInfo.stakedValuePerOption[index] / 10 ** 18,\r\n        });\r\n      });\r\n      return temp;\r\n    }\r\n    if (proposalInfo !== null && proposalContent !== null) {\r\n      setCurrentResults(getCurrentResults());\r\n    }\r\n  }, [proposalContent, proposalInfo]);\r\n\r\n  return (\r\n    <div className=\"p-4 flex flex-col space-y-2\">\r\n      {currentResults.length !== 0 ? (\r\n        currentResults\r\n          .sort((a, b) => b.percentage - a.percentage)\r\n          .map((result, index) => (\r\n            <ResultItem\r\n              key={index}\r\n              choice={result.choice}\r\n              percentage={result.percentage}\r\n              label={result.label}\r\n            />\r\n          ))\r\n      ) : (\r\n        <div className=\"font-semibold px-4\">Be the first to vote!</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CurrentResultsAllocation({ proposalContent, proposalInfo }) {\r\n  const [currentResults, setCurrentResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    function getCurrentResults() {\r\n      const temp = [];\r\n      const totalStaked = proposalInfo.stakedValuePerOption.reduce(\r\n        (a, b) => a + b / 10 ** 18,\r\n        0\r\n      );\r\n      const votes = [...proposalInfo.votes];\r\n      const sortedVotes = votes.sort((a, b) => {\r\n        return b.amount - a.amount;\r\n      });\r\n      sortedVotes.forEach((vote) => {\r\n        temp.push({\r\n          choice: proposalContent.options[vote.option].label,\r\n          percentage: Math.round(vote.amount / 10 ** 14 / totalStaked) / 100,\r\n          label: vote.amount / 10 ** 18,\r\n        });\r\n      });\r\n      return temp;\r\n    }\r\n    if (proposalInfo !== null && proposalContent !== null) {\r\n      setCurrentResults(getCurrentResults());\r\n    }\r\n  }, [proposalContent, proposalInfo]);\r\n\r\n  return (\r\n    <div className=\"p-4 flex flex-col space-y-2\">\r\n      {currentResults.length !== 0 ? (\r\n        currentResults\r\n          .sort((a, b) => b.percentage - a.percentage)\r\n          .map((result, index) => (\r\n            <ResultItem\r\n              key={index}\r\n              choice={result.choice}\r\n              percentage={result.percentage}\r\n              label={result.label}\r\n            />\r\n          ))\r\n      ) : (\r\n        <div className=\"font-semibold px-4\">Be the first to vote!</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Dialog, Transition } from \"@headlessui/react\";\r\nimport { useWeb3 } from \"@openzeppelin/network/lib/react\";\r\nimport { Field, FieldArray, Form, Formik, useFormikContext } from \"formik\";\r\nimport React, { Fragment, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { createProposal } from \"../api/Api\";\r\nimport { getCurrentDateTime, showCurrentDate } from \"./voteUtils\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst formTypes = [\r\n  { label: \"Loss Voting\", value: \"loss\" },\r\n  { label: \"Allocation Proposal\", value: \"allocation\" },\r\n];\r\n\r\nconst minStakeValues = [\r\n  { label: \"No Minimum\", value: 0 },\r\n  { label: \"1 coin\", value: 1 },\r\n  { label: \"5 coins\", value: 5 },\r\n  { label: \"10 coins\", value: 10 },\r\n];\r\n\r\nlet initialType = \"loss\";\r\nlet initialMinStakeVal = 0;\r\n\r\nconst initialValues = {\r\n  title: \"\",\r\n  content: \"\",\r\n  type: initialType,\r\n  options: [{ id: 1, label: \"\" }],\r\n  min_stake: initialMinStakeVal,\r\n  end_date: getCurrentDateTime(),\r\n};\r\n\r\nasync function submitProposal(web3, account, values) {\r\n  const finalValues = {\r\n    ...values,\r\n    create_date: getCurrentDateTime(),\r\n    numOfOptions: values.options.length,\r\n    isLossVoting: values.type === \"loss\",\r\n    isAllocationProposal: values.type === \"allocation\",\r\n    userId: account,\r\n  };\r\n\r\n  const create = await createProposal(web3, account, finalValues);\r\n  return create;\r\n}\r\n\r\nconst proposalSchema = Yup.object().shape({\r\n  title: Yup.string().required(\"Title is required\"),\r\n  content: Yup.string().required(\"Content is required\"),\r\n  options: Yup.array().min(2, \"Please have at least 2 options\"),\r\n});\r\n\r\nexport default function NewProposal() {\r\n  const web3Context = useWeb3(\r\n    `wss://mainnet.infura.io/ws/v3/${process.env.PROJECT_ID}`\r\n  );\r\n  const { lib: web3, accounts } = web3Context;\r\n\r\n  //Toast for error messages\r\n  // const errorNotification = (error) =>\r\n  //   toast.info(error, {\r\n  //     position: \"bottom-center\",\r\n  //     autoClose: 3000,\r\n  //     hideProgressBar: false,\r\n  //     closeOnClick: true,\r\n  //     pauseOnHover: false,\r\n  //     draggable: true,\r\n  //     progress: undefined,\r\n  //   });\r\n\r\n  return (\r\n    <div className=\"w-full h-full\">\r\n      <div className=\"flex flex-col max-w-7xl mx-auto p-2\">\r\n        <div className=\"flex flex-row items-center justify-between px-4 \">\r\n          <div className=\"text-4xl text-gray-700 my-4\">New Proposal</div>\r\n          <Link to={`/vote`}>\r\n            <div className=\"bg-gray-200 text-gray-600 px-3 py-2 rounded-md text-sm font-medium cursor-pointer\">\r\n              Back to vote\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-7xl x-auto px-8 py-2\">\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={proposalSchema}\r\n          validateOnMount={true}\r\n          onSubmit={(values, actions, { resetForm }) => {\r\n            // console.log(JSON.stringify(values));\r\n            // submitProposal(web3, accounts[0], values);\r\n            // actions.setSubmitting(false);\r\n            resetForm();\r\n          }}\r\n        >\r\n          {({ values, errors, touched, isValid, setSubmitting }) => (\r\n            <Form>\r\n              <div className=\"hidden\">\r\n                {(values.min_stake = initialMinStakeVal)}\r\n                {(values.type = initialType)}\r\n              </div>\r\n\r\n              <div className=\"flex flex-col text-gray-600 lg:flex-row lg:space-x-4\">\r\n                <div className=\"flex-col w-full\">\r\n                  <Field\r\n                    name=\"title\"\r\n                    component={CustomTextInput}\r\n                    label=\"Title\"\r\n                    placeholder=\"Question\"\r\n                    errors={errors}\r\n                    touched={touched}\r\n                  />\r\n                  <Field\r\n                    name=\"content\"\r\n                    component={CustomLongTextInput}\r\n                    label=\"Content\"\r\n                    placeholder=\"What is your proposal?\"\r\n                    errors={errors}\r\n                    touched={touched}\r\n                  />\r\n                  <div className=\"flex-col w-full border-2 border-gray-200 rounded-xl my-6\">\r\n                    <div className=\"flex flex-row space-x-2  items-end bg-blue-100 px-4 py-3 text-2xl font-semibold rounded-t-lg\">\r\n                      <span>Choices</span>\r\n                      <div className=\"class\">\r\n                        {errors.options && touched.options ? (\r\n                          <div className=\"text-red-500 font-thin text-sm\">\r\n                            require at least 2 options\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <FieldArray name=\"options\">\r\n                      {({ insert, remove, push }) => (\r\n                        <div className=\"flex flex-col w-full px-4 my-2 space-y-2\">\r\n                          {values.options.length > 0 &&\r\n                            values.options.map((friend, index) => (\r\n                              <div\r\n                                className=\"flex flex-row space-x-2 border-2 border-gray-200 rounded-full items-center font-bold justify-between\"\r\n                                key={index}\r\n                              >\r\n                                <div className=\"pl-8 cursor-default\">\r\n                                  {index + 1}\r\n                                </div>\r\n                                <Field\r\n                                  name={`options.${index}.label`}\r\n                                  placeholder=\"option\"\r\n                                  component={CustomOptionInput}\r\n                                />\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"font-bold w-12\"\r\n                                  onClick={() => remove(index)}\r\n                                >\r\n                                  <div className=\"w-4\">X</div>\r\n                                </button>\r\n                              </div>\r\n                            ))}\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"p-2 border-2 border-gray-200 rounded-full items-center px-8 font-bold w-full text-center justify-center\"\r\n                            onClick={() =>\r\n                              push({ id: values.options.length + 1, label: \"\" })\r\n                            }\r\n                          >\r\n                            Add option\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </FieldArray>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex-col lg:w-96 bg-white rounded-xl border border-gray-200\">\r\n                  <div className=\"border-b border-gray-200 bg-blue-100 px-8 py-3 rounded-t-lg font-bold text-xl\">\r\n                    Actions\r\n                  </div>\r\n                  <div className=\"p-4\">\r\n                    <Field name=\"type\" component={CustomVoteInput} />\r\n                    <Field name=\"min_stake\" component={CustomStakeInput} />\r\n                    <Field name=\"end_date\" component={CustomDateInput} />\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={!isValid}\r\n                      className={\r\n                        !isValid\r\n                          ? `w-full rounded-full items-center px-5 py-3 text-sm font-medium text-gray-400 bg-white outline-none focus:outline-none m-1 hover:m-0 focus:m-0 border border-gray-400 hover:border-4 transition-all cursor-not-allowed`\r\n                          : `w-full rounded-full items-center px-5 py-3 text-sm font-medium text-indigo-600 bg-white outline-none focus:outline-none m-1 hover:m-0 focus:m-0 border border-indigo-600 hover:border-4 focus:border-4 hover:border-indigo-800 hover:text-black hover:bg-indigo-100 focus:border-purple-200 transition-all`\r\n                      }\r\n                      onClick={() => {\r\n                        submitProposal(web3, accounts[0], values);\r\n                        setSubmitting(false);\r\n                      }}\r\n                    >\r\n                      Publish\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CustomTextInput = ({ field, ...props }) => (\r\n  <div className=\"flex flex-col my-2 space-y-1 w-full\">\r\n    <div className=\"flex flex-row space-x-2 items-end\">\r\n      <div className=\"text-gray-500 font-semibold text-2xl\">{props.label}</div>\r\n      <div className=\"class\">\r\n        {props.errors.title && props.touched.title ? (\r\n          <div className=\"text-red-500 font-thin text-sm\">required</div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n    <input\r\n      type=\"text\"\r\n      {...field}\r\n      {...props}\r\n      className=\"border border-gray-200 rounded-lg p-2 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent font-medium\"\r\n    />\r\n  </div>\r\n);\r\n\r\nconst CustomLongTextInput = ({ field, ...props }) => (\r\n  <div className=\"flex flex-col my-2 space-y-1\">\r\n    <div className=\"flex flex-row space-x-2 items-end\">\r\n      <div className=\"text-gray-500 font-semibold text-2xl\">{props.label}</div>\r\n      <div className=\"class\">\r\n        {props.errors.content && props.touched.content ? (\r\n          <div className=\"text-red-500 font-thin text-sm\">required</div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n    <textarea\r\n      type=\"text\"\r\n      rows={6}\r\n      {...field}\r\n      {...props}\r\n      className=\"border border-gray-200 rounded-lg p-2 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent font-medium\"\r\n    />\r\n  </div>\r\n);\r\n\r\nconst CustomOptionInput = ({ field, ...props }) => (\r\n  <div className=\"flex flex-col w-full\">\r\n    <input\r\n      type=\"text\"\r\n      {...field}\r\n      {...props}\r\n      className=\"p-2 shadow-sm text-base focus:outline-none focus:border-transparent font-bold text-center\"\r\n    />\r\n  </div>\r\n);\r\n\r\nfunction CustomStakeInput({ field, ...props }) {\r\n  let [isOpen, setIsOpen] = useState(false);\r\n  let [stakeLabel, setStakeLabel] = useState(getLabel());\r\n  let buttonRef = useRef(minStakeValues.map(() => React.createRef()));\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function setStake(stake) {\r\n    initialMinStakeVal = stake.value;\r\n    field.min_stake = stake.value;\r\n    setStakeLabel(stake.label);\r\n    closeModal();\r\n  }\r\n\r\n  // Get the label corresponding to the value in minStakeValues\r\n  function getLabel() {\r\n    try {\r\n      return minStakeValues.find((stake) => stake.value === field.value).label;\r\n    } catch (error) {\r\n      return \"Select Minimum Stake\";\r\n    }\r\n  }\r\n\r\n  // Get the position of the label in minStakeValues using value\r\n  function getPosition() {\r\n    return minStakeValues.findIndex((stake) => stake.value === field.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col w-full\">\r\n        <button\r\n          className=\"w-full rounded-full items-center px-5 py-3 text-sm font-medium text-indigo-600 bg-white outline-none focus:outline-none m-1 hover:m-0 focus:m-0 border border-indigo-600 hover:border-indigo-800 hover:text-black hover:bg-indigo-100 transition-all\"\r\n          onClick={openModal}\r\n        >\r\n          {stakeLabel}\r\n        </button>\r\n      </div>\r\n      <Transition appear show={isOpen} as={Fragment} autoFocus={isOpen}>\r\n        <Dialog\r\n          as=\"div\"\r\n          className=\"fixed inset-0 z-10 overflow-y-auto\"\r\n          onClose={closeModal}\r\n          initialFocus={buttonRef.current[getPosition()]}\r\n        >\r\n          <div className=\"min-h-screen px-4 text-center\">\r\n            {/* Allow for clicking outside to close modal*/}\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0\"\r\n              enterTo=\"opacity-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100\"\r\n              leaveTo=\"opacity-0\"\r\n            >\r\n              <Dialog.Overlay className=\"fixed inset-0\" />\r\n            </Transition.Child>\r\n\r\n            {/* This element is to trick the browser into centering the modal contents. */}\r\n            <span\r\n              className=\"inline-block h-screen align-middle\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &#8203;\r\n            </span>\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-lg font-medium leading-6 text-gray-900 cursor-default\"\r\n                >\r\n                  Select Minimum Stake\r\n                </Dialog.Title>\r\n                <div className=\"mt-2\">\r\n                  {minStakeValues.map((stake, index) => (\r\n                    <button\r\n                      key={stake.value}\r\n                      value={stake.value}\r\n                      type=\"button\"\r\n                      {...field}\r\n                      {...props}\r\n                      ref={buttonRef.current[index]}\r\n                      className=\"w-full rounded-full items-center px-5 py-3 text-sm font-medium text-indigo-600 bg-white outline-none focus:outline-none m-1 hover:m-0 focus:m-0 border border-indigo-600 hover:border-indigo-800 hover:text-black hover:bg-indigo-100 transition-all focus:ring-2 focus:border-transparent focus:ring-blue-400\"\r\n                      onClick={() => setStake(stake)}\r\n                    >\r\n                      {stake.label}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction CustomVoteInput({ field, ...props }) {\r\n  let [isOpen, setIsOpen] = useState(false);\r\n  let buttonRef = useRef(formTypes.map(() => React.createRef()));\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function setType(type) {\r\n    field.value = type.value;\r\n    initialType = type.value;\r\n    closeModal();\r\n  }\r\n\r\n  // Get the label corresponding to the value in formTypes\r\n  function getLabel() {\r\n    try {\r\n      return formTypes.find((type) => type.value === field.value).label;\r\n    } catch (error) {\r\n      return \"Select Type\";\r\n    }\r\n  }\r\n\r\n  // Get the position of the label in formTypes using value\r\n  function getPosition() {\r\n    return formTypes.findIndex((type) => type.value === field.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col w-full\">\r\n        <button\r\n          className=\"w-full rounded-full items-center px-5 py-3 text-sm font-medium text-indigo-600 bg-white outline-none focus:outline-none m-1 hover:m-0 focus:m-0 border border-indigo-600 hover:border-indigo-800 hover:text-black hover:bg-indigo-100 transition-all\"\r\n          onClick={openModal}\r\n        >\r\n          {getLabel()}\r\n        </button>\r\n      </div>\r\n      <Transition appear show={isOpen} as={Fragment} autoFocus={isOpen}>\r\n        <Dialog\r\n          as=\"div\"\r\n          className=\"fixed inset-0 z-10 overflow-y-auto\"\r\n          onClose={closeModal}\r\n          initialFocus={buttonRef.current[getPosition()]}\r\n        >\r\n          <div className=\"min-h-screen px-4 text-center\">\r\n            {/* Allow for clicking outside to close modal*/}\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0\"\r\n              enterTo=\"opacity-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100\"\r\n              leaveTo=\"opacity-0\"\r\n            >\r\n              <Dialog.Overlay className=\"fixed inset-0\" />\r\n            </Transition.Child>\r\n\r\n            {/* This element is to trick the browser into centering the modal contents. */}\r\n            <span\r\n              className=\"inline-block h-screen align-middle\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &#8203;\r\n            </span>\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-lg font-medium leading-6 text-gray-900 cursor-default\"\r\n                >\r\n                  Select Type\r\n                </Dialog.Title>\r\n                <div className=\"mt-2\">\r\n                  {formTypes.map((type, index) => (\r\n                    <button\r\n                      key={type.value}\r\n                      value={type.value}\r\n                      type=\"button\"\r\n                      {...field}\r\n                      {...props}\r\n                      ref={buttonRef.current[index]}\r\n                      className=\"w-full rounded-full items-center px-5 py-3 text-sm font-medium text-indigo-600 bg-white outline-none focus:outline-none m-1 hover:m-0 focus:m-0 border border-indigo-600 hover:border-indigo-800 hover:text-black hover:bg-indigo-100 transition-all focus:ring-2 focus:border-transparent focus:ring-blue-400\"\r\n                      onClick={() => setType(type)}\r\n                    >\r\n                      {type.label}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction CustomDateInput({ field, ...props }) {\r\n  const { setFieldValue } = useFormikContext();\r\n  let [isOpen, setIsOpen] = useState(false);\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col w-full\">\r\n        <button\r\n          className=\"w-full rounded-full items-center px-5 py-3 text-sm font-medium text-indigo-600 bg-white outline-none focus:outline-none m-1 hover:m-0 focus:m-0 border border-indigo-600 hover:border-indigo-800 hover:text-black hover:bg-indigo-100 transition-all\"\r\n          onClick={openModal}\r\n        >\r\n          End Date: {showCurrentDate(field.value)}\r\n        </button>\r\n      </div>\r\n      <Transition appear show={isOpen} as={Fragment} autoFocus={isOpen}>\r\n        <Dialog\r\n          as=\"div\"\r\n          className=\"fixed inset-0 z-10 overflow-y-auto\"\r\n          onClose={closeModal}\r\n        >\r\n          <div className=\"min-h-screen px-4 text-center\">\r\n            {/* Allow for clicking outside to close modal*/}\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0\"\r\n              enterTo=\"opacity-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100\"\r\n              leaveTo=\"opacity-0\"\r\n            >\r\n              <Dialog.Overlay className=\"fixed inset-0\" />\r\n            </Transition.Child>\r\n\r\n            {/* This element is to trick the browser into centering the modal contents. */}\r\n            <span\r\n              className=\"inline-block h-screen align-middle\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &#8203;\r\n            </span>\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <div className=\"inline-block w-full max-w-min px-6 py-4 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-lg font-medium leading-6 text-gray-900 cursor-default text-center\"\r\n                >\r\n                  Select Date\r\n                </Dialog.Title>\r\n                <div className=\"mt-2\">\r\n                  <DatePicker\r\n                    {...field}\r\n                    {...props}\r\n                    selected={(field.value && new Date(field.value)) || null}\r\n                    onChange={(val) => {\r\n                      setFieldValue(field.name, val.getTime());\r\n                    }}\r\n                    inline\r\n                    className=\"rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-100 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\r\n                  />\r\n                  <div className=\"text-center\">\r\n                    <button\r\n                      className=\"rounded-full border border-purple-400 p-1 px-3 text-purple-600 text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent focus:bg-gray-100\"\r\n                      onClick={closeModal}\r\n                    >\r\n                      Confirm\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition>\r\n    </>\r\n  );\r\n}\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function HeaderTextFormat({ header, info }) {\r\n  const copyNotification = () =>\r\n    toast.info(\"Copied to clipboard\", {\r\n      position: \"bottom-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  return (\r\n    <div className=\"flex flex-col space-y-1 mb-1\">\r\n      <div className=\"text-lg font-medium cursor-default line-clamp-1\">\r\n        {header}\r\n      </div>\r\n      <div\r\n        className=\"text-md font-medium text-gray-500 cursor-pointer line-clamp-1\"\r\n        // onClick={() => {\r\n        //   copyNotification();\r\n        //   navigator.clipboard.writeText(info);\r\n        // }}\r\n      >\r\n        {info}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function IndividualLineFormat({ header, type = \"default\" }) {\r\n  if (type === \"first\") {\r\n    return (\r\n      <div className=\"p-4 px-6 text-lg font-semibold border-b\">{header}</div>\r\n    );\r\n  }\r\n  if (type === \"default\") {\r\n    return (\r\n      <div className=\"p-4 px-6 text-lg font-semibold border-b\">{header}</div>\r\n    );\r\n  }\r\n  if (type === \"last\") {\r\n    return <div className=\"p-4 px-6 text-lg font-semibold\">{header}</div>;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useRouteMatch, Switch, Route } from \"react-router-dom\";\r\nimport NavBar from \"../components/Layout/NavBar\";\r\nimport VoteList from \"../components/Vote/VoteList\";\r\nimport VoteDetail from \"../components/Vote/VoteDetail\";\r\nimport NewProposal from \"../components/Vote/NewProposal\";\r\nimport HeaderTextFormat from \"../components/TextFormats/HeaderTextFormat\";\r\nimport IndividualLineFormat from \"../components/TextFormats/IndividualLineFormat\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function Vote() {\r\n  let { path, url } = useRouteMatch();\r\n  const [page, setPage] = useState(\"Proposals\");\r\n\r\n  function PanelItem({ label }) {\r\n    return (\r\n      <div\r\n        className={\r\n          page === label\r\n            ? \"border-r-4 border-indigo-500 cursor-pointer hover:text-gray-400 hover:border-indigo-300\"\r\n            : \"cursor-pointer hover:text-gray-400\"\r\n        }\r\n        onClick={() => setPage(label)}\r\n      >\r\n        {label}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function PanelLeft() {\r\n    return (\r\n      <div className=\"relative flex flex-col border border-gray-200 shadow-lg text-center rounded-lg\">\r\n        <div className=\"text-xl z-10 my-3\">ABCDao</div>\r\n        {/* placeholder image */}\r\n        <img\r\n          className=\"rounded-full mx-auto w-1/2 h-1/2 z-10\"\r\n          src=\"https://rehabconceptspt.com/wp-content/uploads/2016/06/placeholder-640-square.jpg\"\r\n          alt=\"\"\r\n          placeholder=\"placeholder\"\r\n        />\r\n        <div className=\"absolute bg-gray-100 inset-x-0 bottom-0 h-3/5 rounded-b-lg\"></div>\r\n        <div className=\"flex flex-col space-y-3 z-10 text-left py-4 px-6 w-full text-lg font-medium\">\r\n          <PanelItem label=\"Proposals\" />\r\n          <div className=\"cursor-pointer hover:text-gray-400\">\r\n            <Link to={`${url}/new-proposal`}>New Proposal</Link>\r\n          </div>\r\n          <PanelItem label=\"About\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function AboutTab() {\r\n    return (\r\n      <>\r\n        <div className=\"flex flex-col w-full space-y-10\">\r\n          <div className=\"flex flex-col border border-gray-100 shadow-lg rounded-lg w-full\">\r\n            <div className=\"p-8\">\r\n              <HeaderTextFormat header=\"About\" info=\"ABCDao\" />\r\n              <HeaderTextFormat header=\"NetWork\" info=\"Ethereum Mainnet\" />\r\n              <HeaderTextFormat header=\"Proposal Validation\" info=\"basic\" />\r\n              <HeaderTextFormat header=\"Proposal Threshold\" info=\"infinite\" />\r\n              <HeaderTextFormat header=\"Strategie(s)\" info=\"erc20-balance-of\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col border border-gray-100 shadow-lg rounded-lg w-full\">\r\n            <IndividualLineFormat header=\"Admins\" />\r\n            <IndividualLineFormat header=\"John\" />\r\n            <IndividualLineFormat header=\"Mark\" />\r\n            <IndividualLineFormat header=\"Sally\" />\r\n            <IndividualLineFormat header=\"Tim\" type=\"last\" />\r\n          </div>\r\n\r\n          <div className=\"flex flex-col border border-gray-100 shadow-lg rounded-lg w-full\">\r\n            <IndividualLineFormat header=\"Developers\" />\r\n            <IndividualLineFormat header=\"Jun Xiong\" />\r\n            <IndividualLineFormat header=\"Adithya Narayan\" />\r\n            <IndividualLineFormat header=\"Bryan Woo\" type=\"last\" />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PanelRight() {\r\n    if (page === \"Proposals\") {\r\n      return (\r\n        <div className=\"w-full\">\r\n          <VoteList />\r\n        </div>\r\n      );\r\n    }\r\n    if (page === \"About\") {\r\n      return <AboutTab />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full h-full\">\r\n      <NavBar />\r\n      <div className=\"flex flex-col max-w-7xl mx-auto p-2 mb-10\">\r\n        <Switch>\r\n          <Route exact path={path}>\r\n            <div className=\"w-full\">\r\n              <div className=\"flex flex-row items-center justify-between px-4 \">\r\n                <div className=\"text-4xl text-gray-700 my-4\">Proposals</div>\r\n                <div className=\"flex lg:hidden\">\r\n                  <Link to={`${url}/new-proposal`}>\r\n                    <div className=\"bg-gray-200 text-gray-600 px-3 py-2 rounded-md text-sm font-medium cursor-pointer hover:bg-indigo-100\">\r\n                      New Proposal\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"hidden lg:flex flex-row space-x-6 w-full\">\r\n                <div className=\"w-1/3\">\r\n                  <PanelLeft />\r\n                </div>\r\n                <PanelRight />\r\n              </div>\r\n              <div className=\"flex flex-col w-full lg:hidden space-y-4\">\r\n                <VoteList />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path={`${path}/new-proposal`}>\r\n            <NewProposal />\r\n          </Route>\r\n          <Route path={`${path}/:id`}>\r\n            <VoteDetail />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useWeb3 } from \"@openzeppelin/network/lib/react\";\r\nimport React, { useState } from \"react\";\r\nimport { getAccountHash } from \"../components/api/utils\";\r\nimport NavBar from \"../components/Layout/NavBar\";\r\nimport HeaderTextFormat from \"../components/TextFormats/HeaderTextFormat\";\r\n\r\nconst sample_data = {\r\n  id: 1,\r\n  nickname: \"Jon\",\r\n  email: \"test@hmail.com\",\r\n  phone: \"987654321\",\r\n  dob: \"11/2/1982\",\r\n  avatar:\r\n    \"https://images.unsplash.com/photo-1576245482660-6fcf7492b4e5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80\",\r\n  created_at: \"test\",\r\n  year: 1,\r\n  department: \"Blockchain\",\r\n};\r\n\r\nexport default function Profile() {\r\n  const web3Context = useWeb3(\r\n    `wss://mainnet.infura.io/ws/v3/${process.env.PROJECT_ID}`\r\n  );\r\n  const { networkId, accounts } = web3Context;\r\n  const [page, setPage] = useState(\"Profile\");\r\n  const accountHash = getAccountHash(accounts, networkId);\r\n\r\n  function PanelItem({ label }) {\r\n    return (\r\n      <div\r\n        className={\r\n          page === label\r\n            ? \"border-r-4 border-indigo-500 cursor-pointer hover:text-gray-400 hover:border-indigo-300\"\r\n            : \"cursor-pointer hover:text-gray-400\"\r\n        }\r\n        onClick={() => setPage(label)}\r\n      >\r\n        {label}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function PanelLeft() {\r\n    return (\r\n      <div className=\"relative flex flex-col border border-gray-200 shadow-lg text-center rounded-lg\">\r\n        <div className=\"text-xl z-10 my-3\">{sample_data.nickname}</div>\r\n        <img\r\n          className=\"rounded-full mx-auto w-1/2 h-1/2 z-10\"\r\n          src={sample_data.avatar}\r\n          alt=\"\"\r\n        />\r\n        <div className=\"absolute bg-gray-100 inset-x-0 bottom-0 h-3/5 rounded-b-lg\"></div>\r\n        <div className=\"flex flex-col space-y-3 z-10 text-left py-4 px-6 w-full text-lg font-medium\">\r\n          <PanelItem label=\"Profile\" />\r\n          <PanelItem label=\"Settings\" />\r\n          <PanelItem label=\"History\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function ProfileTab() {\r\n    return (\r\n      <div className=\"flex flex-col border border-gray-100 shadow-lg rounded-lg w-full\">\r\n        <div className=\"p-8\">\r\n          <HeaderTextFormat\r\n            header={\"Hash ID\"}\r\n            info={accountHash ? accountHash : \"Login to see account hash\"}\r\n          />\r\n          <HeaderTextFormat\r\n            header={\"Nickname\"}\r\n            info={sample_data[\"nickname\"]}\r\n          />\r\n          <HeaderTextFormat header={\"Email\"} info={sample_data[\"email\"]} />\r\n          <HeaderTextFormat header={\"Phone\"} info={sample_data[\"phone\"]} />\r\n          <HeaderTextFormat\r\n            header={\"Year\"}\r\n            info={\"Year \" + sample_data[\"year\"]}\r\n          />\r\n          <HeaderTextFormat\r\n            header={\"Department\"}\r\n            info={sample_data[\"department\"]}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function SettingsTab() {\r\n    return (\r\n      <div className=\"flex flex-col border border-gray-100 shadow-lg rounded-lg w-full\">\r\n        <div className=\"p-8\">Settings</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function HistoryTab() {\r\n    return (\r\n      <div className=\"flex flex-col border border-gray-100 shadow-lg rounded-lg w-full\">\r\n        <div className=\"p-8\">History</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function PanelRight() {\r\n    if (page === \"Profile\") {\r\n      return <ProfileTab />;\r\n    }\r\n    if (page === \"Settings\") {\r\n      return <SettingsTab />;\r\n    }\r\n    if (page === \"History\") {\r\n      return <HistoryTab />;\r\n    }\r\n    return <div className=\"class\">Impossible Div</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full h-full\">\r\n      <NavBar />\r\n      <div className=\"flex flex-col max-w-7xl mx-auto p-2 mb-10\">\r\n        <div className=\"flex flex-col px-4\">\r\n          <div className=\"text-4xl text-gray-700 my-4\">User Profile</div>\r\n          <div className=\"flex items-center\">\r\n            <div className=\"hidden lg:flex flex-row space-x-6 w-full\">\r\n              <div className=\"w-1/3\">\r\n                <PanelLeft />\r\n              </div>\r\n              <PanelRight />\r\n            </div>\r\n            <div className=\"flex flex-col w-full lg:hidden space-y-4\">\r\n              <ProfileTab />\r\n              <SettingsTab />\r\n              <HistoryTab />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./pages\";\r\nimport Vote from \"./pages/vote\";\r\nimport Profile from \"./pages/profile\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/vote\" component={Vote} />\r\n        <Route path=\"/profile\" component={Profile} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}